$date
	Wed Jun 10 11:32:40 2020
$end
$version
	Icarus Verilog
$end
$timescale
	10ns
$end
$scope module router_tb $end
$var wire 1 ! lrdy $end
$var wire 1 " s2valid $end
$var wire 1 # s2rdy $end
$var wire 2 $ s2port [1:0] $end
$var wire 8 % s2data [7:0] $end
$var wire 1 & s1valid $end
$var wire 1 ' s1rdy $end
$var wire 8 ( s1data [7:0] $end
$var wire 1 ) r3valid $end
$var wire 8 * r3data [7:0] $end
$var wire 1 + r2valid $end
$var wire 8 , r2data [7:0] $end
$var wire 1 - r1valid $end
$var wire 8 . r1data [7:0] $end
$var wire 1 / r0valid $end
$var wire 8 0 r0data [7:0] $end
$var wire 1 1 arqst $end
$var wire 2 2 aport [1:0] $end
$var wire 1 3 agrant $end
$var reg 1 4 clk $end
$var reg 8 5 ldata [7:0] $end
$var reg 1 6 lvalid $end
$var reg 1 7 r0rdy $end
$var reg 1 8 r1rdy $end
$var reg 1 9 r2rdy $end
$var reg 1 : r3rdy $end
$scope module uut1 $end
$var wire 1 4 clk $end
$var wire 8 ; ldata [7:0] $end
$var wire 1 ! lrdy $end
$var wire 1 6 lvalid $end
$var wire 8 < rdata [7:0] $end
$var wire 1 & rvalid $end
$var wire 1 ' rrdy $end
$var wire 1 = full $end
$var wire 1 > empty $end
$var reg 8 ? irdata [7:0] $end
$var reg 3 @ pnt [2:0] $end
$upscope $end
$scope module uut2 $end
$var wire 1 4 clk $end
$var wire 8 A ldata [7:0] $end
$var wire 1 ' lrdy $end
$var wire 1 & lvalid $end
$var wire 8 B rdata [7:0] $end
$var wire 2 C rport [1:0] $end
$var wire 1 " rvalid $end
$var wire 1 # rrdy $end
$var wire 1 3 agrant $end
$var reg 2 D aport [1:0] $end
$var reg 1 1 arqst $end
$var reg 2 E decstate [1:0] $end
$var reg 1 F ilrdy $end
$var reg 8 G inreg [7:0] $end
$var reg 8 H irdata [7:0] $end
$var reg 2 I irport [1:0] $end
$var reg 1 J irvalid $end
$var reg 2 K outport [1:0] $end
$upscope $end
$scope module uut3 $end
$var wire 1 4 clk $end
$var wire 1 3 grant $end
$var wire 2 L port [1:0] $end
$var wire 1 1 rqst $end
$var reg 1 M igrant $end
$upscope $end
$scope module uut4 $end
$var wire 1 4 clk $end
$var wire 8 N ldata [7:0] $end
$var wire 2 O lport [1:0] $end
$var wire 1 # lrdy $end
$var wire 1 " lvalid $end
$var wire 1 7 r0rdy $end
$var wire 1 8 r1rdy $end
$var wire 1 9 r2rdy $end
$var wire 1 : r3rdy $end
$var reg 1 P iempty $end
$var reg 8 Q ildata [7:0] $end
$var reg 2 R ilport [1:0] $end
$var reg 8 S r0data [7:0] $end
$var reg 1 / r0valid $end
$var reg 8 T r1data [7:0] $end
$var reg 1 - r1valid $end
$var reg 8 U r2data [7:0] $end
$var reg 1 + r2valid $end
$var reg 8 V r3data [7:0] $end
$var reg 1 ) r3valid $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx V
bx U
bx T
bx S
bx R
bx Q
1P
bx O
bx N
0M
bx L
b0 K
xJ
bx I
bx H
bx G
1F
b0 E
bx D
bx C
bx B
bx A
b11 @
bx ?
x>
x=
bx <
b0 ;
1:
19
18
17
06
b0 5
04
x3
bx 2
x1
bx 0
0/
bx .
0-
bx ,
0+
bx *
0)
bx (
x'
x&
bx %
bx $
x#
x"
x!
$end
#10
1#
1'
#20
0=
0&
1>
#40
1!
#50
b1010101 5
b1010101 ;
16
#70
03
#100
b10 @
14
#120
1&
0>
b1010101 (
b1010101 <
b1010101 A
#200
04
#250
b10010110 5
b10010110 ;
#300
1M
0F
b1 E
b1 2
b1 D
b1 L
11
b1010101 G
b1010101 ?
14
#310
0'
#320
b10010110 (
b10010110 <
b10010110 A
#370
13
#400
04
#450
b10010111 5
b10010111 ;
#500
b1 @
b10010110 G
1F
1J
b1010101 H
b1 I
b1 K
b10 E
01
14
#510
1'
1"
b1010101 %
b1010101 B
b1010101 N
b1 $
b1 C
b1 O
#600
04
#650
b10011000 5
b10011000 ;
#700
1-
b1010101 .
b1010101 T
1P
b1 R
b1010101 Q
0M
b10010110 H
b10010110 ?
14
#710
b10010110 %
b10010110 B
b10010110 N
#720
b10010111 (
b10010111 <
b10010111 A
#770
03
#800
04
#850
08
b10011001 5
b10011001 ;
#900
b10010111 ?
b10010111 G
0P
b10010110 Q
14
#910
0#
#920
b10011000 (
b10011000 <
b10011000 A
#1000
04
#1050
18
b11011010 5
b11011010 ;
#1100
1P
b10010110 .
b10010110 T
b10011000 G
b10010111 H
0F
b10011000 ?
14
#1110
1#
b10010111 %
b10010111 B
b10010111 N
0'
#1120
b10011001 (
b10011001 <
b10011001 A
#1200
04
#1250
06
#1300
b10011001 G
b10011000 H
1F
b10010111 .
b10010111 T
1P
b10010111 Q
14
#1310
b10011000 %
b10011000 B
b10011000 N
1'
#1400
04
#1450
b1110101 5
b1110101 ;
16
#1500
b10011000 .
b10011000 T
1P
b10011000 Q
b10011001 H
b10011001 ?
14
#1510
b10011001 %
b10011001 B
b10011001 N
#1520
b11011010 (
b11011010 <
b11011010 A
#1600
04
#1650
b10110110 5
b10110110 ;
#1700
b11011010 ?
b11011010 G
b10011001 .
b10011001 T
1P
b10011001 Q
14
#1720
b1110101 (
b1110101 <
b1110101 A
#1800
04
#1850
b10110111 5
b10110111 ;
#1900
1P
1M
0F
b1 E
b11 2
b11 D
b11 L
11
b1110101 G
b11011010 H
b1110101 ?
14
#1910
0'
b11011010 %
b11011010 B
b11011010 N
#1920
b10110110 (
b10110110 <
b10110110 A
#1970
13
#2000
04
#2050
b10111000 5
b10111000 ;
#2100
b0 @
b10110110 G
1F
b1110101 H
b11 I
b11 K
b10 E
01
b11011010 .
b11011010 T
1P
b11011010 Q
14
#2110
1'
b1110101 %
b1110101 B
b1110101 N
b11 $
b11 C
b11 O
#2200
04
#2250
b10111001 5
b10111001 ;
#2300
1)
b1110101 *
b1110101 V
1P
b11 R
b1110101 Q
0M
b10110110 H
b10110110 ?
14
#2310
b10110110 %
b10110110 B
b10110110 N
#2320
b10110111 (
b10110111 <
b10110111 A
#2370
03
#2400
04
#2450
b11111010 5
b11111010 ;
#2500
b10110111 ?
b10110111 G
b10110110 *
b10110110 V
1P
b10110110 Q
14
#2520
b10111000 (
b10111000 <
b10111000 A
#2600
04
#2650
06
#2700
1P
b10111000 G
b10110111 H
b1 @
b10111000 ?
14
#2710
b10110111 %
b10110111 B
b10110111 N
#2720
b10111001 (
b10111001 <
b10111001 A
#2800
04
#2900
b10 @
b10111001 ?
b10111001 G
b10111000 H
b10110111 *
b10110111 V
1P
b10110111 Q
14
#2910
b10111000 %
b10111000 B
b10111000 N
#2920
b11111010 (
b11111010 <
b11111010 A
#3000
04
#3100
b10111000 *
b10111000 V
1P
b10111000 Q
b11111010 G
b10111001 H
b11 @
b11111010 ?
14
#3110
b10111001 %
b10111001 B
b10111001 N
#3120
0&
1>
#3200
04
#3300
b0 E
b11111010 H
b10111001 *
b10111001 V
1P
b10111001 Q
14
#3310
b11111010 %
b11111010 B
b11111010 N
#3400
04
#3500
b11111010 *
b11111010 V
1P
b11111010 Q
14
#3600
04
#3700
1P
14
#3800
04
#3900
1P
14
#4000
04
#4100
1P
14
#4150
